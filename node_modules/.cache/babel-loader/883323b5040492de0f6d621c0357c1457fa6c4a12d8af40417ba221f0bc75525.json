{"ast":null,"code":"var _jsxFileName = \"C:\\\\web\\\\onix-ios-task\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport WorkersList from \"./components/WorkersList\";\nimport AddWorkerForm from \"./components/AddWorkerForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [workers, setWorkers] = useState([]);\n\n  // const expenses = [\n  //   {\n  //     id: \"e1\",\n  //     name: \"Alex\",\n  //     surname: \"Ziierov\",\n  //     gender: \"male\",\n  //     birthDay: \"1999-05-11\",\n  //     salary: \"25000\",\n  //     department: \"IOS dev\",\n  //   },\n  //   {\n  //     id: \"e2\",\n  //     name: \"Anstasia\",\n  //     surname: \"Kovalenko\",\n  //     gender: \"female\",\n  //     birthDay: \"2003-01-07\",\n  //     salary: \"32000\",\n  //     department: \"IOS dev\",\n  //   },\n  // ];\n\n  const fetchWorkers = async () => {\n    const response = await fetch(\"https://react-http-175ac-default-rtdb.firebaseio.com/workers.json\");\n    if (!response.ok) {\n      throw new Error(\"Request failed\");\n    }\n    const data = await response.json();\n    const loadedWorkers = [];\n    for (const workerKey in data) {\n      loadedWorkers.push({\n        id: workerKey,\n        name: data[workerKey].name,\n        surname: data[workerKey].surname,\n        birthDay: data[workerKey].birthDay,\n        salary: data[workerKey].salary,\n        department: data[workerKey].department,\n        gender: data[workerKey].gender\n      });\n    }\n    setWorkers(loadedWorkers);\n  };\n  useEffect(() => {\n    fetchWorkers();\n  }, []);\n\n  // const addWorkerHandler = (obj) => {\n  //   setWorkers((prevList) => {\n  //     let updatedList = [...prevList];\n  //     updatedList.unshift({\n  //       name: obj.name,\n  //       surname: obj.surname,\n  //       gender: obj.gender,\n  //       birthday: obj.birthDay,\n  //       salary: obj.salary,\n  //       department: obj.department,\n  //       id: Math.random().toString(),\n  //     });\n  //     console.log(updatedList);\n  //     return updatedList;\n  //   });\n  // };\n  const workerAddHandler = worker => {\n    setWorkers(prevWorkers => prevWorkers.concat(worker));\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(AddWorkerForm, {\n      onAddWorkerHandler: workerAddHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(WorkersList, {\n      list: workers\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(App, \"8dWHyGGFKocIZErNAr5f9LEm3Qc=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","WorkersList","AddWorkerForm","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","workers","setWorkers","fetchWorkers","response","fetch","ok","Error","data","json","loadedWorkers","workerKey","push","id","name","surname","birthDay","salary","department","gender","workerAddHandler","worker","prevWorkers","concat","children","onAddWorkerHandler","fileName","_jsxFileName","lineNumber","columnNumber","list","_c","$RefreshReg$"],"sources":["C:/web/onix-ios-task/src/App.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport WorkersList from \"./components/WorkersList\";\nimport AddWorkerForm from \"./components/AddWorkerForm\";\n\nconst App = () => {\n  const [workers, setWorkers] = useState([]);\n \n  // const expenses = [\n  //   {\n  //     id: \"e1\",\n  //     name: \"Alex\",\n  //     surname: \"Ziierov\",\n  //     gender: \"male\",\n  //     birthDay: \"1999-05-11\",\n  //     salary: \"25000\",\n  //     department: \"IOS dev\",\n  //   },\n  //   {\n  //     id: \"e2\",\n  //     name: \"Anstasia\",\n  //     surname: \"Kovalenko\",\n  //     gender: \"female\",\n  //     birthDay: \"2003-01-07\",\n  //     salary: \"32000\",\n  //     department: \"IOS dev\",\n  //   },\n  // ];\n\n  const fetchWorkers = async () => {\n    const response = await fetch(\n      \"https://react-http-175ac-default-rtdb.firebaseio.com/workers.json\"\n    );\n    if (!response.ok) {\n      throw new Error(\"Request failed\");\n    }\n    const data = await response.json();\n    const loadedWorkers = [];\n    for (const workerKey in data) {\n      loadedWorkers.push({\n        id: workerKey,\n        name: data[workerKey].name,\n        surname: data[workerKey].surname,\n        birthDay: data[workerKey].birthDay,\n        salary: data[workerKey].salary,\n        department: data[workerKey].department,\n        gender: data[workerKey].gender,\n      });\n    }\n    setWorkers(loadedWorkers);\n  };\n  useEffect(() => {\n    fetchWorkers();\n  }, []);\n\n  // const addWorkerHandler = (obj) => {\n  //   setWorkers((prevList) => {\n  //     let updatedList = [...prevList];\n  //     updatedList.unshift({\n  //       name: obj.name,\n  //       surname: obj.surname,\n  //       gender: obj.gender,\n  //       birthday: obj.birthDay,\n  //       salary: obj.salary,\n  //       department: obj.department,\n  //       id: Math.random().toString(),\n  //     });\n  //     console.log(updatedList);\n  //     return updatedList;\n  //   });\n  // };\n  const workerAddHandler = (worker) => {\n    setWorkers((prevWorkers) => prevWorkers.concat(worker));\n  };\n\n  return (\n    <>\n      <AddWorkerForm onAddWorkerHandler={workerAddHandler} />\n      <WorkersList list={workers}/>\n    </>\n  );\n};\n\nexport default App;\n"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAOC,WAAW,MAAM,0BAA0B;AAClD,OAAOC,aAAa,MAAM,4BAA4B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEvD,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;;EAE1C;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA,MAAMY,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAC1B,mEACF,CAAC;IACD,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;MAChB,MAAM,IAAIC,KAAK,CAAC,gBAAgB,CAAC;IACnC;IACA,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;IAClC,MAAMC,aAAa,GAAG,EAAE;IACxB,KAAK,MAAMC,SAAS,IAAIH,IAAI,EAAE;MAC5BE,aAAa,CAACE,IAAI,CAAC;QACjBC,EAAE,EAAEF,SAAS;QACbG,IAAI,EAAEN,IAAI,CAACG,SAAS,CAAC,CAACG,IAAI;QAC1BC,OAAO,EAAEP,IAAI,CAACG,SAAS,CAAC,CAACI,OAAO;QAChCC,QAAQ,EAAER,IAAI,CAACG,SAAS,CAAC,CAACK,QAAQ;QAClCC,MAAM,EAAET,IAAI,CAACG,SAAS,CAAC,CAACM,MAAM;QAC9BC,UAAU,EAAEV,IAAI,CAACG,SAAS,CAAC,CAACO,UAAU;QACtCC,MAAM,EAAEX,IAAI,CAACG,SAAS,CAAC,CAACQ;MAC1B,CAAC,CAAC;IACJ;IACAjB,UAAU,CAACQ,aAAa,CAAC;EAC3B,CAAC;EACDlB,SAAS,CAAC,MAAM;IACdW,YAAY,CAAC,CAAC;EAChB,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA,MAAMiB,gBAAgB,GAAIC,MAAM,IAAK;IACnCnB,UAAU,CAAEoB,WAAW,IAAKA,WAAW,CAACC,MAAM,CAACF,MAAM,CAAC,CAAC;EACzD,CAAC;EAED,oBACEzB,OAAA,CAAAE,SAAA;IAAA0B,QAAA,gBACE5B,OAAA,CAACF,aAAa;MAAC+B,kBAAkB,EAAEL;IAAiB;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACvDjC,OAAA,CAACH,WAAW;MAACqC,IAAI,EAAE7B;IAAQ;MAAAyB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC;EAAA,eAC7B,CAAC;AAEP,CAAC;AAAC7B,EAAA,CA5EID,GAAG;AAAAgC,EAAA,GAAHhC,GAAG;AA8ET,eAAeA,GAAG;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}