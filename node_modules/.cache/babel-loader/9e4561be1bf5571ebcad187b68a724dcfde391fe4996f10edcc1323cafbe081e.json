{"ast":null,"code":"var _jsxFileName = \"C:\\\\web\\\\onix-ios-task\\\\src\\\\components\\\\WorkersList.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { Worker } from \"./Worker\";\nimport styles from \"./WorkersList.module.css\";\nimport { ListHeader } from \"./ListHeader\";\nimport { Tabs } from \"./Tabs/Tabs\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst WorkersList = props => {\n  _s();\n  const [tabIndexClicked, setTabIndexClicked] = useState(0);\n  // let listContent = (\n  //   <>\n  //     {props.list.map((worker) => (\n  //       <li key={worker.id}>\n  //         <Worker\n  //           name={worker.name}\n  //           surname={worker.surname}\n  //           gender={worker.gender}\n  //           birthday={worker.birthDay}\n  //           salary={worker.salary}\n  //           department={worker.department}\n  //         />\n  //       </li>\n  //     ))}\n  //   </>\n  // );\n  const workersList = props.list;\n  const filtredList = workersList.filter(worker => worker.department === \"Hrs\");\n  let listContent = /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: filtredList.map(worker => /*#__PURE__*/_jsxDEV(\"li\", {\n      children: /*#__PURE__*/_jsxDEV(Worker, {\n        name: worker.name,\n        surname: worker.surname,\n        gender: worker.gender,\n        birthday: worker.birthDay,\n        salary: worker.salary,\n        department: worker.department\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this)\n    }, worker.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this))\n  }, void 0, false);\n  console.log(filtredList);\n  const setTabIndex = index => {\n    setTabIndexClicked(index);\n  };\n  // if (tabIndexClicked === 0) {\n  //   listContent = (\n  //     <>\n  //       <p>SOMETHING2</p>\n  //     </>\n  //   );\n  // } else if (tabIndexClicked === 1) {\n  //   listContent = (\n  //     <>\n  //       <p>SOMETHING2</p>\n  //     </>\n  //   );\n  // } else if (tabIndexClicked === 2) {\n  //   listContent = (\n  //     <>\n  //       <p>SOMETHING2</p>\n  //     </>\n  //   );\n  // }\n\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles[\"list__wrap\"],\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles[\"content-wrap\"],\n        children: [/*#__PURE__*/_jsxDEV(Tabs, {\n          onTabIndexHandler: setTabIndex,\n          tabIndex: tabIndexClicked\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ListHeader, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), listContent]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n};\n_s(WorkersList, \"QNaukd8djdfnSgDbbnQEYdjvxUI=\");\n_c = WorkersList;\nexport default WorkersList;\nvar _c;\n$RefreshReg$(_c, \"WorkersList\");","map":{"version":3,"names":["React","useState","Worker","styles","ListHeader","Tabs","jsxDEV","_jsxDEV","Fragment","_Fragment","WorkersList","props","_s","tabIndexClicked","setTabIndexClicked","workersList","list","filtredList","filter","worker","department","listContent","children","map","name","surname","gender","birthday","birthDay","salary","fileName","_jsxFileName","lineNumber","columnNumber","id","console","log","setTabIndex","index","className","onTabIndexHandler","tabIndex","_c","$RefreshReg$"],"sources":["C:/web/onix-ios-task/src/components/WorkersList.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { Worker } from \"./Worker\";\r\nimport styles from \"./WorkersList.module.css\";\r\nimport { ListHeader } from \"./ListHeader\";\r\nimport { Tabs } from \"./Tabs/Tabs\";\r\n\r\nconst WorkersList = (props) => {\r\n  const [tabIndexClicked, setTabIndexClicked] = useState(0);\r\n  // let listContent = (\r\n  //   <>\r\n  //     {props.list.map((worker) => (\r\n  //       <li key={worker.id}>\r\n  //         <Worker\r\n  //           name={worker.name}\r\n  //           surname={worker.surname}\r\n  //           gender={worker.gender}\r\n  //           birthday={worker.birthDay}\r\n  //           salary={worker.salary}\r\n  //           department={worker.department}\r\n  //         />\r\n  //       </li>\r\n  //     ))}\r\n  //   </>\r\n  // );\r\n  const workersList = props.list;\r\n  const filtredList = workersList.filter(\r\n    (worker) => worker.department === \"Hrs\"\r\n  );\r\n  let listContent = (\r\n    <>\r\n      {filtredList.map((worker) => (\r\n        <li key={worker.id}>\r\n          <Worker\r\n            name={worker.name}\r\n            surname={worker.surname}\r\n            gender={worker.gender}\r\n            birthday={worker.birthDay}\r\n            salary={worker.salary}\r\n            department={worker.department}\r\n          />\r\n        </li>\r\n      ))}\r\n    </>\r\n  );\r\n\r\n  console.log(filtredList);\r\n  const setTabIndex = (index) => {\r\n    setTabIndexClicked(index);\r\n  };\r\n  // if (tabIndexClicked === 0) {\r\n  //   listContent = (\r\n  //     <>\r\n  //       <p>SOMETHING2</p>\r\n  //     </>\r\n  //   );\r\n  // } else if (tabIndexClicked === 1) {\r\n  //   listContent = (\r\n  //     <>\r\n  //       <p>SOMETHING2</p>\r\n  //     </>\r\n  //   );\r\n  // } else if (tabIndexClicked === 2) {\r\n  //   listContent = (\r\n  //     <>\r\n  //       <p>SOMETHING2</p>\r\n  //     </>\r\n  //   );\r\n  // }\r\n\r\n  return (\r\n    <ul>\r\n      <div className={styles[\"list__wrap\"]}>\r\n        <div className={styles[\"content-wrap\"]}>\r\n          <Tabs onTabIndexHandler={setTabIndex} tabIndex={tabIndexClicked} />\r\n          <ListHeader />\r\n          {listContent}\r\n        </div>\r\n      </div>\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default WorkersList;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,MAAM,QAAQ,UAAU;AACjC,OAAOC,MAAM,MAAM,0BAA0B;AAC7C,SAASC,UAAU,QAAQ,cAAc;AACzC,SAASC,IAAI,QAAQ,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEnC,MAAMC,WAAW,GAAIC,KAAK,IAAK;EAAAC,EAAA;EAC7B,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGb,QAAQ,CAAC,CAAC,CAAC;EACzD;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA,MAAMc,WAAW,GAAGJ,KAAK,CAACK,IAAI;EAC9B,MAAMC,WAAW,GAAGF,WAAW,CAACG,MAAM,CACnCC,MAAM,IAAKA,MAAM,CAACC,UAAU,KAAK,KACpC,CAAC;EACD,IAAIC,WAAW,gBACbd,OAAA,CAAAE,SAAA;IAAAa,QAAA,EACGL,WAAW,CAACM,GAAG,CAAEJ,MAAM,iBACtBZ,OAAA;MAAAe,QAAA,eACEf,OAAA,CAACL,MAAM;QACLsB,IAAI,EAAEL,MAAM,CAACK,IAAK;QAClBC,OAAO,EAAEN,MAAM,CAACM,OAAQ;QACxBC,MAAM,EAAEP,MAAM,CAACO,MAAO;QACtBC,QAAQ,EAAER,MAAM,CAACS,QAAS;QAC1BC,MAAM,EAAEV,MAAM,CAACU,MAAO;QACtBT,UAAU,EAAED,MAAM,CAACC;MAAW;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC/B;IAAC,GARKd,MAAM,CAACe,EAAE;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OASd,CACL;EAAC,gBACF,CACH;EAEDE,OAAO,CAACC,GAAG,CAACnB,WAAW,CAAC;EACxB,MAAMoB,WAAW,GAAIC,KAAK,IAAK;IAC7BxB,kBAAkB,CAACwB,KAAK,CAAC;EAC3B,CAAC;EACD;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA,oBACE/B,OAAA;IAAAe,QAAA,eACEf,OAAA;MAAKgC,SAAS,EAAEpC,MAAM,CAAC,YAAY,CAAE;MAAAmB,QAAA,eACnCf,OAAA;QAAKgC,SAAS,EAAEpC,MAAM,CAAC,cAAc,CAAE;QAAAmB,QAAA,gBACrCf,OAAA,CAACF,IAAI;UAACmC,iBAAiB,EAAEH,WAAY;UAACI,QAAQ,EAAE5B;QAAgB;UAAAiB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eACnE1B,OAAA,CAACH,UAAU;UAAA0B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,EACbZ,WAAW;MAAA;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACT;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAET,CAAC;AAACrB,EAAA,CA1EIF,WAAW;AAAAgC,EAAA,GAAXhC,WAAW;AA4EjB,eAAeA,WAAW;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}