{"ast":null,"code":"var _jsxFileName = \"C:\\\\web\\\\onix-ios-task\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport WorkersList from \"./components/WorkersList\";\nimport AddWorkerForm from \"./components/AddWorkerForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [workers, setWorkers] = useState([]);\n  const expenses = [{\n    id: \"e1\",\n    name: \"Alex\",\n    surname: \"Ziierov\",\n    gender: \"male\",\n    birthday: \"1999-05-11\",\n    salary: \"25000\",\n    department: \"IOS dev\"\n  }, {\n    id: \"e2\",\n    name: \"Anstasia\",\n    surname: \"Kovalenko\",\n    gender: \"female\",\n    birthday: \"2003-01-07\",\n    salary: \"32000\",\n    department: \"IOS dev\"\n  }];\n  const fetchWorkers = async () => {\n    const response = await fetch(\"https://react-http-175ac-default-rtdb.firebaseio.com/workers.json\");\n    if (!response.ok) {\n      throw new Error(\"Request failed\");\n    }\n    const data = await response.json();\n  };\n  const addWorkerHandler = obj => {\n    setWorkers(prevList => {\n      let updatedList = [...prevList];\n      updatedList.unshift({\n        name: obj.name,\n        surname: obj.surname,\n        gender: obj.gender,\n        birthday: obj.birthDay,\n        salary: obj.salary,\n        department: obj.department,\n        id: Math.random().toString()\n      });\n      console.log(updatedList);\n      return updatedList;\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(AddWorkerForm, {\n      onAddWorkerHandler: addWorkerHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(WorkersList, {\n      list: expenses.concat(workers)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(App, \"YPvzsbsl1bZ9qWb3Fk4hlM545yo=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","WorkersList","AddWorkerForm","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","workers","setWorkers","expenses","id","name","surname","gender","birthday","salary","department","fetchWorkers","response","fetch","ok","Error","data","json","addWorkerHandler","obj","prevList","updatedList","unshift","birthDay","Math","random","toString","console","log","children","onAddWorkerHandler","fileName","_jsxFileName","lineNumber","columnNumber","list","concat","_c","$RefreshReg$"],"sources":["C:/web/onix-ios-task/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport WorkersList from \"./components/WorkersList\";\nimport AddWorkerForm from \"./components/AddWorkerForm\";\n\nconst App = () => {\n  const [workers, setWorkers] = useState([]);\n  const expenses = [\n    {\n      id: \"e1\",\n      name: \"Alex\",\n      surname: \"Ziierov\",\n      gender: \"male\",\n      birthday: \"1999-05-11\",\n      salary: \"25000\",\n      department: \"IOS dev\",\n    },\n    {\n      id: \"e2\",\n      name: \"Anstasia\",\n      surname: \"Kovalenko\",\n      gender: \"female\",\n      birthday: \"2003-01-07\",\n      salary: \"32000\",\n      department: \"IOS dev\",\n    },\n  ];\n\n  const fetchWorkers = async () => {\n    const response = await fetch(\n      \"https://react-http-175ac-default-rtdb.firebaseio.com/workers.json\"\n    );\n    if (!response.ok) {\n      throw new Error(\"Request failed\");\n    }\n    const data = await response.json();\n  };\n\n  const addWorkerHandler = (obj) => {\n    setWorkers((prevList) => {\n      let updatedList = [...prevList];\n      updatedList.unshift({\n        name: obj.name,\n        surname: obj.surname,\n        gender: obj.gender,\n        birthday: obj.birthDay,\n        salary: obj.salary,\n        department: obj.department,\n        id: Math.random().toString(),\n      });\n      console.log(updatedList);\n      return updatedList;\n    });\n  };\n\n  return (\n    <>\n      <AddWorkerForm onAddWorkerHandler={addWorkerHandler} />\n      <WorkersList list={expenses.concat(workers)} />\n    </>\n  );\n};\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,WAAW,MAAM,0BAA0B;AAClD,OAAOC,aAAa,MAAM,4BAA4B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEvD,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAMW,QAAQ,GAAG,CACf;IACEC,EAAE,EAAE,IAAI;IACRC,IAAI,EAAE,MAAM;IACZC,OAAO,EAAE,SAAS;IAClBC,MAAM,EAAE,MAAM;IACdC,QAAQ,EAAE,YAAY;IACtBC,MAAM,EAAE,OAAO;IACfC,UAAU,EAAE;EACd,CAAC,EACD;IACEN,EAAE,EAAE,IAAI;IACRC,IAAI,EAAE,UAAU;IAChBC,OAAO,EAAE,WAAW;IACpBC,MAAM,EAAE,QAAQ;IAChBC,QAAQ,EAAE,YAAY;IACtBC,MAAM,EAAE,OAAO;IACfC,UAAU,EAAE;EACd,CAAC,CACF;EAED,MAAMC,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAC1B,mEACF,CAAC;IACD,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;MAChB,MAAM,IAAIC,KAAK,CAAC,gBAAgB,CAAC;IACnC;IACA,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;EACpC,CAAC;EAED,MAAMC,gBAAgB,GAAIC,GAAG,IAAK;IAChCjB,UAAU,CAAEkB,QAAQ,IAAK;MACvB,IAAIC,WAAW,GAAG,CAAC,GAAGD,QAAQ,CAAC;MAC/BC,WAAW,CAACC,OAAO,CAAC;QAClBjB,IAAI,EAAEc,GAAG,CAACd,IAAI;QACdC,OAAO,EAAEa,GAAG,CAACb,OAAO;QACpBC,MAAM,EAAEY,GAAG,CAACZ,MAAM;QAClBC,QAAQ,EAAEW,GAAG,CAACI,QAAQ;QACtBd,MAAM,EAAEU,GAAG,CAACV,MAAM;QAClBC,UAAU,EAAES,GAAG,CAACT,UAAU;QAC1BN,EAAE,EAAEoB,IAAI,CAACC,MAAM,CAAC,CAAC,CAACC,QAAQ,CAAC;MAC7B,CAAC,CAAC;MACFC,OAAO,CAACC,GAAG,CAACP,WAAW,CAAC;MACxB,OAAOA,WAAW;IACpB,CAAC,CAAC;EACJ,CAAC;EAED,oBACEzB,OAAA,CAAAE,SAAA;IAAA+B,QAAA,gBACEjC,OAAA,CAACF,aAAa;MAACoC,kBAAkB,EAAEZ;IAAiB;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACvDtC,OAAA,CAACH,WAAW;MAAC0C,IAAI,EAAEhC,QAAQ,CAACiC,MAAM,CAACnC,OAAO;IAAE;MAAA8B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA,eAC/C,CAAC;AAEP,CAAC;AAAClC,EAAA,CAxDID,GAAG;AAAAsC,EAAA,GAAHtC,GAAG;AA0DT,eAAeA,GAAG;AAAC,IAAAsC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}