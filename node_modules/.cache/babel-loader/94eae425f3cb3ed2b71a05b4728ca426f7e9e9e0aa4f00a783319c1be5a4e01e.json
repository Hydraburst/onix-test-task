{"ast":null,"code":"var _jsxFileName = \"C:\\\\web\\\\onix-ios-task\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport WorkersList from \"./components/WorkersList\";\nimport AddWorkerForm from \"./components/AddWorkerForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [workers, setWorkers] = useState([]);\n  const [filterButtonSelected, setFilterButtonSelected] = useState(\"All\");\n  const expenses = [{\n    id: \"e1\",\n    name: \"Alex\",\n    surname: \"Ziierov\",\n    gender: \"male\",\n    birthDay: \"1999-05-11\",\n    salary: \"25000\",\n    department: \"IOS dev\"\n  }, {\n    id: \"e2\",\n    name: \"Anstasia\",\n    surname: \"Kovalenko\",\n    gender: \"female\",\n    birthDay: \"2003-01-07\",\n    salary: \"32000\",\n    department: \"IOS dev\"\n  }];\n  const fetchWorkers = async () => {\n    const response = await fetch(\"https://react-http-175ac-default-rtdb.firebaseio.com/workers.json\");\n    if (!response.ok) {\n      throw new Error(\"Request failed\");\n    }\n    const data = await response.json();\n    const loadedWorkers = [];\n    for (const workerKey in data) {\n      loadedWorkers.push({\n        id: workerKey,\n        name: data[workerKey].name,\n        surname: data[workerKey].surname,\n        birthDay: data[workerKey].birthDay,\n        salary: data[workerKey].salary,\n        department: data[workerKey].department,\n        gender: data[workerKey].gender\n      });\n    }\n    setWorkers(loadedWorkers);\n  };\n  useEffect(() => {\n    fetchWorkers();\n  }, []);\n\n  // const addWorkerHandler = (obj) => {\n  //   setWorkers((prevList) => {\n  //     let updatedList = [...prevList];\n  //     updatedList.unshift({\n  //       name: obj.name,\n  //       surname: obj.surname,\n  //       gender: obj.gender,\n  //       birthday: obj.birthDay,\n  //       salary: obj.salary,\n  //       department: obj.department,\n  //       id: Math.random().toString(),\n  //     });\n  //     console.log(updatedList);\n  //     return updatedList;\n  //   });\n  // };\n  const workerAddHandler = worker => {\n    setWorkers(prevWorkers => prevWorkers.concat(worker));\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(AddWorkerForm, {\n      onAddWorkerHandler: workerAddHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(WorkersList, {\n      list: workers,\n      filterButton: filterButtonSelected\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(App, \"GAgNHDAxn09jBLUMc3bjPU+2lSM=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","WorkersList","AddWorkerForm","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","workers","setWorkers","filterButtonSelected","setFilterButtonSelected","expenses","id","name","surname","gender","birthDay","salary","department","fetchWorkers","response","fetch","ok","Error","data","json","loadedWorkers","workerKey","push","workerAddHandler","worker","prevWorkers","concat","children","onAddWorkerHandler","fileName","_jsxFileName","lineNumber","columnNumber","list","filterButton","_c","$RefreshReg$"],"sources":["C:/web/onix-ios-task/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport WorkersList from \"./components/WorkersList\";\nimport AddWorkerForm from \"./components/AddWorkerForm\";\n\nconst App = () => {\n  const [workers, setWorkers] = useState([]);\n  const [filterButtonSelected, setFilterButtonSelected] = useState(\"All\");\n  const expenses = [\n    {\n      id: \"e1\",\n      name: \"Alex\",\n      surname: \"Ziierov\",\n      gender: \"male\",\n      birthDay: \"1999-05-11\",\n      salary: \"25000\",\n      department: \"IOS dev\",\n    },\n    {\n      id: \"e2\",\n      name: \"Anstasia\",\n      surname: \"Kovalenko\",\n      gender: \"female\",\n      birthDay: \"2003-01-07\",\n      salary: \"32000\",\n      department: \"IOS dev\",\n    },\n  ];\n\n  const fetchWorkers = async () => {\n    const response = await fetch(\n      \"https://react-http-175ac-default-rtdb.firebaseio.com/workers.json\"\n    );\n    if (!response.ok) {\n      throw new Error(\"Request failed\");\n    }\n    const data = await response.json();\n    const loadedWorkers = [];\n    for (const workerKey in data) {\n      loadedWorkers.push({\n        id: workerKey,\n        name: data[workerKey].name,\n        surname: data[workerKey].surname,\n        birthDay: data[workerKey].birthDay,\n        salary: data[workerKey].salary,\n        department: data[workerKey].department,\n        gender: data[workerKey].gender,\n      });\n    }\n    setWorkers(loadedWorkers);\n  };\n  useEffect(() => {\n    fetchWorkers();\n  }, []);\n\n  // const addWorkerHandler = (obj) => {\n  //   setWorkers((prevList) => {\n  //     let updatedList = [...prevList];\n  //     updatedList.unshift({\n  //       name: obj.name,\n  //       surname: obj.surname,\n  //       gender: obj.gender,\n  //       birthday: obj.birthDay,\n  //       salary: obj.salary,\n  //       department: obj.department,\n  //       id: Math.random().toString(),\n  //     });\n  //     console.log(updatedList);\n  //     return updatedList;\n  //   });\n  // };\n  const workerAddHandler = (worker) => {\n    setWorkers((prevWorkers) => prevWorkers.concat(worker));\n  };\n\n  return (\n    <>\n      <AddWorkerForm onAddWorkerHandler={workerAddHandler} />\n      <WorkersList list={workers} filterButton = {filterButtonSelected}/>\n    </>\n  );\n};\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}