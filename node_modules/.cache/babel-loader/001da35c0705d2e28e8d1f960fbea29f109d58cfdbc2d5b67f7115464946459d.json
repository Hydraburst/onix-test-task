{"ast":null,"code":"var _jsxFileName = \"C:\\\\web\\\\onix-ios-task\\\\src\\\\components\\\\List\\\\WorkersList.js\";\nimport { Worker } from \"../Worker/Worker\";\nimport { ListHeader } from \"../ListHeader/ListHeader\";\nimport { Tabs } from \"../Tabs/Tabs\";\nimport styles from \"./WorkersList.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst WorkersList = props => {\n  let listContent;\n  let estimates;\n  const filterList = (list, searchText) => {\n    if (!searchText) {\n      return list;\n    }\n    return filterList = list.filter(worker => worker.name.toLowerCase().includes(searchText.toLowerCase) === props.searchText || worker.surname.toLowerCase().includes(searchText.toLowerCase) === props.searchText);\n  };\n  let totalSalaries = props.list.reduce((total, worker) => {\n    return Math.round((total + parseInt(worker.salary)) / props.list.length);\n  }, 0);\n  if (props.onIndexTabClicked === \"All\") {\n    let totalAmount = props.list.length;\n    listContent = /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [props.list.map(worker => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(Worker, {\n          name: worker.name,\n          surname: worker.surname,\n          gender: worker.gender,\n          birthday: worker.birthDay,\n          salary: worker.salary,\n          department: worker.department\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 13\n        }, this)\n      }, worker.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: totalAmount && totalSalaries > 0 ? estimates : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No info!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 59\n        }, this)\n      }, void 0, false)]\n    }, void 0, true);\n    estimates = /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.estimates,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: `Average salary: ${totalSalaries}$`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: `Quantity: ${totalAmount}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this);\n  } else {\n    let filtredList = props.list.filter(worker => worker.department === props.onIndexTabClicked);\n    let totalAmount = filtredList.length;\n    let totalSalaries = filtredList.reduce((total, worker) => {\n      return Math.round((total + parseInt(worker.salary)) / filtredList.length);\n    }, 0);\n    estimates = /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.estimates,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: `Average salary: ${totalSalaries}$`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: `Quantity: ${totalAmount}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this);\n    if (props.searchText !== \"\") {\n      filtredList = filterList(filtredList, props.searchText);\n    }\n    listContent = /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [filtredList.map(worker => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(Worker, {\n          name: worker.name,\n          surname: worker.surname,\n          gender: worker.gender,\n          birthday: worker.birthDay,\n          salary: worker.salary,\n          department: worker.department\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }, this)\n      }, worker.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: totalAmount && totalSalaries > 0 ? estimates : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No info!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 59\n        }, this)\n      }, void 0, false)]\n    }, void 0, true);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles[\"list__wrap\"],\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles[\"content-wrap\"],\n      children: [/*#__PURE__*/_jsxDEV(Tabs, {\n        onIndexTabClicked: props.onIndexTabClicked,\n        onTabClickHander: props.onTabClickHander\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ListHeader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), listContent.props.children.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No workers FUCK!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 11\n      }, this) : listContent]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 5\n  }, this);\n};\n_c = WorkersList;\nexport default WorkersList;\nvar _c;\n$RefreshReg$(_c, \"WorkersList\");","map":{"version":3,"names":["Worker","ListHeader","Tabs","styles","jsxDEV","_jsxDEV","Fragment","_Fragment","WorkersList","props","listContent","estimates","filterList","list","searchText","filter","worker","name","toLowerCase","includes","surname","totalSalaries","reduce","total","Math","round","parseInt","salary","length","onIndexTabClicked","totalAmount","children","map","gender","birthday","birthDay","department","fileName","_jsxFileName","lineNumber","columnNumber","id","className","filtredList","onTabClickHander","_c","$RefreshReg$"],"sources":["C:/web/onix-ios-task/src/components/List/WorkersList.js"],"sourcesContent":["import { Worker } from \"../Worker/Worker\";\r\nimport { ListHeader } from \"../ListHeader/ListHeader\";\r\nimport { Tabs } from \"../Tabs/Tabs\";\r\nimport styles from \"./WorkersList.module.css\";\r\n\r\nconst WorkersList = (props) => {\r\n  let listContent;\r\n\r\n  let estimates;\r\n\r\n  const filterList = (list, searchText) => {\r\n    if (!searchText) {\r\n      return list;\r\n    }\r\n    return (filterList = list.filter(\r\n      (worker) =>\r\n        worker.name.toLowerCase().includes(searchText.toLowerCase) ===\r\n          props.searchText ||\r\n        worker.surname.toLowerCase().includes(searchText.toLowerCase) ===\r\n          props.searchText\r\n    ));\r\n  };\r\n\r\n  let totalSalaries = props.list.reduce((total, worker) => {\r\n    return Math.round((total + parseInt(worker.salary)) / props.list.length);\r\n  }, 0);\r\n\r\n  if (props.onIndexTabClicked === \"All\") {\r\n    let totalAmount = props.list.length;\r\n    listContent = (\r\n      <>\r\n        {props.list.map((worker) => (\r\n          <li key={worker.id}>\r\n            <Worker\r\n              name={worker.name}\r\n              surname={worker.surname}\r\n              gender={worker.gender}\r\n              birthday={worker.birthDay}\r\n              salary={worker.salary}\r\n              department={worker.department}\r\n            />\r\n          </li>\r\n        ))}\r\n        <>{totalAmount && totalSalaries > 0 ? estimates : <p>No info!</p>}</>\r\n      </>\r\n    );\r\n    estimates = (\r\n      <div className={styles.estimates}>\r\n        <div>{`Average salary: ${totalSalaries}$`}</div>\r\n        <div>{`Quantity: ${totalAmount}`}</div>\r\n      </div>\r\n    );\r\n  } else {\r\n    let filtredList = props.list.filter(\r\n      (worker) => worker.department === props.onIndexTabClicked\r\n    );\r\n    let totalAmount = filtredList.length;\r\n    let totalSalaries = filtredList.reduce((total, worker) => {\r\n      return Math.round((total + parseInt(worker.salary)) / filtredList.length);\r\n    }, 0);\r\n    estimates = (\r\n      <div className={styles.estimates}>\r\n        <div>{`Average salary: ${totalSalaries}$`}</div>\r\n        <div>{`Quantity: ${totalAmount}`}</div>\r\n      </div>\r\n    );\r\n    if (props.searchText !== \"\") {\r\n      filtredList = filterList(filtredList, props.searchText);\r\n    }\r\n    listContent = (\r\n      <>\r\n        {filtredList.map((worker) => (\r\n          <li key={worker.id}>\r\n            <Worker\r\n              name={worker.name}\r\n              surname={worker.surname}\r\n              gender={worker.gender}\r\n              birthday={worker.birthDay}\r\n              salary={worker.salary}\r\n              department={worker.department}\r\n            />\r\n          </li>\r\n        ))}\r\n        <>{totalAmount && totalSalaries > 0 ? estimates : <p>No info!</p>}</>\r\n      </>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className={styles[\"list__wrap\"]}>\r\n      <div className={styles[\"content-wrap\"]}>\r\n        <Tabs\r\n          onIndexTabClicked={props.onIndexTabClicked}\r\n          onTabClickHander={props.onTabClickHander}\r\n        />\r\n        <ListHeader />\r\n        {listContent.props.children.length === 0 ? (\r\n          <p>No workers FUCK!</p>\r\n        ) : (\r\n          listContent\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WorkersList;\r\n"],"mappings":";AAAA,SAASA,MAAM,QAAQ,kBAAkB;AACzC,SAASC,UAAU,QAAQ,0BAA0B;AACrD,SAASC,IAAI,QAAQ,cAAc;AACnC,OAAOC,MAAM,MAAM,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE9C,MAAMC,WAAW,GAAIC,KAAK,IAAK;EAC7B,IAAIC,WAAW;EAEf,IAAIC,SAAS;EAEb,MAAMC,UAAU,GAAGA,CAACC,IAAI,EAAEC,UAAU,KAAK;IACvC,IAAI,CAACA,UAAU,EAAE;MACf,OAAOD,IAAI;IACb;IACA,OAAQD,UAAU,GAAGC,IAAI,CAACE,MAAM,CAC7BC,MAAM,IACLA,MAAM,CAACC,IAAI,CAACC,WAAW,CAAC,CAAC,CAACC,QAAQ,CAACL,UAAU,CAACI,WAAW,CAAC,KACxDT,KAAK,CAACK,UAAU,IAClBE,MAAM,CAACI,OAAO,CAACF,WAAW,CAAC,CAAC,CAACC,QAAQ,CAACL,UAAU,CAACI,WAAW,CAAC,KAC3DT,KAAK,CAACK,UACZ,CAAC;EACH,CAAC;EAED,IAAIO,aAAa,GAAGZ,KAAK,CAACI,IAAI,CAACS,MAAM,CAAC,CAACC,KAAK,EAAEP,MAAM,KAAK;IACvD,OAAOQ,IAAI,CAACC,KAAK,CAAC,CAACF,KAAK,GAAGG,QAAQ,CAACV,MAAM,CAACW,MAAM,CAAC,IAAIlB,KAAK,CAACI,IAAI,CAACe,MAAM,CAAC;EAC1E,CAAC,EAAE,CAAC,CAAC;EAEL,IAAInB,KAAK,CAACoB,iBAAiB,KAAK,KAAK,EAAE;IACrC,IAAIC,WAAW,GAAGrB,KAAK,CAACI,IAAI,CAACe,MAAM;IACnClB,WAAW,gBACTL,OAAA,CAAAE,SAAA;MAAAwB,QAAA,GACGtB,KAAK,CAACI,IAAI,CAACmB,GAAG,CAAEhB,MAAM,iBACrBX,OAAA;QAAA0B,QAAA,eACE1B,OAAA,CAACL,MAAM;UACLiB,IAAI,EAAED,MAAM,CAACC,IAAK;UAClBG,OAAO,EAAEJ,MAAM,CAACI,OAAQ;UACxBa,MAAM,EAAEjB,MAAM,CAACiB,MAAO;UACtBC,QAAQ,EAAElB,MAAM,CAACmB,QAAS;UAC1BR,MAAM,EAAEX,MAAM,CAACW,MAAO;UACtBS,UAAU,EAAEpB,MAAM,CAACoB;QAAW;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC/B;MAAC,GARKxB,MAAM,CAACyB,EAAE;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OASd,CACL,CAAC,eACFnC,OAAA,CAAAE,SAAA;QAAAwB,QAAA,EAAGD,WAAW,IAAIT,aAAa,GAAG,CAAC,GAAGV,SAAS,gBAAGN,OAAA;UAAA0B,QAAA,EAAG;QAAQ;UAAAM,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG;MAAC,gBAAG,CAAC;IAAA,eACrE,CACH;IACD7B,SAAS,gBACPN,OAAA;MAAKqC,SAAS,EAAEvC,MAAM,CAACQ,SAAU;MAAAoB,QAAA,gBAC/B1B,OAAA;QAAA0B,QAAA,EAAO,mBAAkBV,aAAc;MAAE;QAAAgB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,eAChDnC,OAAA;QAAA0B,QAAA,EAAO,aAAYD,WAAY;MAAC;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpC,CACN;EACH,CAAC,MAAM;IACL,IAAIG,WAAW,GAAGlC,KAAK,CAACI,IAAI,CAACE,MAAM,CAChCC,MAAM,IAAKA,MAAM,CAACoB,UAAU,KAAK3B,KAAK,CAACoB,iBAC1C,CAAC;IACD,IAAIC,WAAW,GAAGa,WAAW,CAACf,MAAM;IACpC,IAAIP,aAAa,GAAGsB,WAAW,CAACrB,MAAM,CAAC,CAACC,KAAK,EAAEP,MAAM,KAAK;MACxD,OAAOQ,IAAI,CAACC,KAAK,CAAC,CAACF,KAAK,GAAGG,QAAQ,CAACV,MAAM,CAACW,MAAM,CAAC,IAAIgB,WAAW,CAACf,MAAM,CAAC;IAC3E,CAAC,EAAE,CAAC,CAAC;IACLjB,SAAS,gBACPN,OAAA;MAAKqC,SAAS,EAAEvC,MAAM,CAACQ,SAAU;MAAAoB,QAAA,gBAC/B1B,OAAA;QAAA0B,QAAA,EAAO,mBAAkBV,aAAc;MAAE;QAAAgB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,eAChDnC,OAAA;QAAA0B,QAAA,EAAO,aAAYD,WAAY;MAAC;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpC,CACN;IACD,IAAI/B,KAAK,CAACK,UAAU,KAAK,EAAE,EAAE;MAC3B6B,WAAW,GAAG/B,UAAU,CAAC+B,WAAW,EAAElC,KAAK,CAACK,UAAU,CAAC;IACzD;IACAJ,WAAW,gBACTL,OAAA,CAAAE,SAAA;MAAAwB,QAAA,GACGY,WAAW,CAACX,GAAG,CAAEhB,MAAM,iBACtBX,OAAA;QAAA0B,QAAA,eACE1B,OAAA,CAACL,MAAM;UACLiB,IAAI,EAAED,MAAM,CAACC,IAAK;UAClBG,OAAO,EAAEJ,MAAM,CAACI,OAAQ;UACxBa,MAAM,EAAEjB,MAAM,CAACiB,MAAO;UACtBC,QAAQ,EAAElB,MAAM,CAACmB,QAAS;UAC1BR,MAAM,EAAEX,MAAM,CAACW,MAAO;UACtBS,UAAU,EAAEpB,MAAM,CAACoB;QAAW;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC/B;MAAC,GARKxB,MAAM,CAACyB,EAAE;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OASd,CACL,CAAC,eACFnC,OAAA,CAAAE,SAAA;QAAAwB,QAAA,EAAGD,WAAW,IAAIT,aAAa,GAAG,CAAC,GAAGV,SAAS,gBAAGN,OAAA;UAAA0B,QAAA,EAAG;QAAQ;UAAAM,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG;MAAC,gBAAG,CAAC;IAAA,eACrE,CACH;EACH;EAEA,oBACEnC,OAAA;IAAKqC,SAAS,EAAEvC,MAAM,CAAC,YAAY,CAAE;IAAA4B,QAAA,eACnC1B,OAAA;MAAKqC,SAAS,EAAEvC,MAAM,CAAC,cAAc,CAAE;MAAA4B,QAAA,gBACrC1B,OAAA,CAACH,IAAI;QACH2B,iBAAiB,EAAEpB,KAAK,CAACoB,iBAAkB;QAC3Ce,gBAAgB,EAAEnC,KAAK,CAACmC;MAAiB;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC1C,CAAC,eACFnC,OAAA,CAACJ,UAAU;QAAAoC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,EACb9B,WAAW,CAACD,KAAK,CAACsB,QAAQ,CAACH,MAAM,KAAK,CAAC,gBACtCvB,OAAA;QAAA0B,QAAA,EAAG;MAAgB;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,GAEvB9B,WACD;IAAA;MAAA2B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACK,EAAA,GAnGIrC,WAAW;AAqGjB,eAAeA,WAAW;AAAC,IAAAqC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}