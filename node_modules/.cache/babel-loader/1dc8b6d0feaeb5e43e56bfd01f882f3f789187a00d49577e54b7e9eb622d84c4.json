{"ast":null,"code":"var _jsxFileName = \"C:\\\\web\\\\onix-ios-task\\\\src\\\\components\\\\List\\\\WorkersList.js\";\nimport { Worker } from \"../Worker/Worker\";\nimport { ListHeader } from \"../ListHeader/ListHeader\";\nimport styles from \"./WorkersList.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst WorkersList = props => {\n  let listContent;\n  let estimates;\n  let totalSalaries = props.list.reduce((total, worker) => {\n    return Math.round((total + parseInt(worker.salary)) / props.list.length);\n  }, 0);\n  estimates = /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.estimates,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: `Average salary: ${totalSalaries}$`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: `Quantity: ${totalAmount}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n  if (props.tabIndexClicked === \"All\") {\n    listContent = /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [props.list.map(worker => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(Worker, {\n          name: worker.name,\n          surname: worker.surname,\n          gender: worker.gender,\n          birthday: worker.birthDay,\n          salary: worker.salary,\n          department: worker.department\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 13\n        }, this)\n      }, worker.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: totalAmount && totalSalaries > 0 ? estimates : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No info!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 59\n        }, this)\n      }, void 0, false)]\n    }, void 0, true);\n  } else {\n    let filtredList = /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: filtredList = props.list.filter(worker => worker.department === props.tabIndexClicked)\n    }, void 0, false);\n    totalAmount = filtredList.length;\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles[\"list__wrap\"],\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles[\"content-wrap\"],\n      children: [/*#__PURE__*/_jsxDEV(ListHeader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), listContent.props.children.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No workers FUCK!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this) : listContent]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n_c = WorkersList;\nexport default WorkersList;\nvar _c;\n$RefreshReg$(_c, \"WorkersList\");","map":{"version":3,"names":["Worker","ListHeader","styles","jsxDEV","_jsxDEV","Fragment","_Fragment","WorkersList","props","listContent","estimates","totalSalaries","list","reduce","total","worker","Math","round","parseInt","salary","length","className","children","fileName","_jsxFileName","lineNumber","columnNumber","totalAmount","tabIndexClicked","map","name","surname","gender","birthday","birthDay","department","id","filtredList","filter","_c","$RefreshReg$"],"sources":["C:/web/onix-ios-task/src/components/List/WorkersList.js"],"sourcesContent":["import { Worker } from \"../Worker/Worker\";\r\nimport { ListHeader } from \"../ListHeader/ListHeader\";\r\nimport styles from \"./WorkersList.module.css\";\r\n\r\nconst WorkersList = (props) => {\r\n  let listContent;\r\n\r\n  let estimates;\r\n\r\n\r\n  let totalSalaries = props.list.reduce((total, worker) => {\r\n    return Math.round((total + parseInt(worker.salary)) / props.list.length);\r\n  }, 0);\r\n\r\n  estimates = (\r\n    <div className={styles.estimates}>\r\n      <div>{`Average salary: ${totalSalaries}$`}</div>\r\n      <div>{`Quantity: ${totalAmount}`}</div>\r\n    </div>\r\n  );\r\n\r\n  if (props.tabIndexClicked === \"All\") {\r\n    listContent = (\r\n      <>\r\n        {props.list.map((worker) => (\r\n          <li key={worker.id}>\r\n            <Worker\r\n              name={worker.name}\r\n              surname={worker.surname}\r\n              gender={worker.gender}\r\n              birthday={worker.birthDay}\r\n              salary={worker.salary}\r\n              department={worker.department}\r\n            />\r\n          </li>\r\n        ))}\r\n        <>{totalAmount && totalSalaries > 0 ? estimates : <p>No info!</p>}</>\r\n      </>\r\n    );\r\n  } else {\r\n    let filtredList = (<>{filtredList = props.list.filter((worker)=>worker.department === props.tabIndexClicked)}</>)\r\n    totalAmount = filtredList.length;\r\n  }\r\n\r\n  return (\r\n    <div className={styles[\"list__wrap\"]}>\r\n      <div className={styles[\"content-wrap\"]}>\r\n        <ListHeader />\r\n        {listContent.props.children.length === 0 ? (\r\n          <p>No workers FUCK!</p>\r\n        ) : (\r\n          listContent\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WorkersList;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}