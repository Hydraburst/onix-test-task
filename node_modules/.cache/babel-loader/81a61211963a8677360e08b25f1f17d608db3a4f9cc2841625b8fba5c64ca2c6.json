{"ast":null,"code":"var _jsxFileName = \"C:\\\\web\\\\onix-ios-task\\\\src\\\\components\\\\List\\\\WorkersList.js\";\nimport { Worker } from \"../Worker/Worker\";\nimport { ListHeader } from \"../ListHeader/ListHeader\";\nimport styles from \"./WorkersList.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst WorkersList = props => {\n  let listContent;\n  let estimates;\n  let totalSalaries = props.list.reduce((total, worker) => {\n    return Math.round((total + parseInt(worker.salary)) / props.list.length);\n  }, 0);\n  if (props.tabIndexClicked === \"All\") {\n    listContent = /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [props.list.map(worker => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(Worker, {\n          name: worker.name,\n          surname: worker.surname,\n          gender: worker.gender,\n          birthday: worker.birthDay,\n          salary: worker.salary,\n          department: worker.department\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 13\n        }, this)\n      }, worker.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: totalAmount && totalSalaries > 0 ? estimates : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No info!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 59\n        }, this)\n      }, void 0, false)]\n    }, void 0, true);\n    estimates = /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.estimates,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: `Average salary: ${totalSalaries}$`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: `Quantity: ${totalAmount}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this);\n  } else {\n    let filtredList = /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: filtredList = props.list.filter(worker => worker.department === props.tabIndexClicked)\n    }, void 0, false);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles[\"list__wrap\"],\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles[\"content-wrap\"],\n      children: [/*#__PURE__*/_jsxDEV(ListHeader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), listContent.props.children.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No workers FUCK!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this) : listContent]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n_c = WorkersList;\nexport default WorkersList;\nvar _c;\n$RefreshReg$(_c, \"WorkersList\");","map":{"version":3,"names":["Worker","ListHeader","styles","jsxDEV","_jsxDEV","Fragment","_Fragment","WorkersList","props","listContent","estimates","totalSalaries","list","reduce","total","worker","Math","round","parseInt","salary","length","tabIndexClicked","children","map","name","surname","gender","birthday","birthDay","department","fileName","_jsxFileName","lineNumber","columnNumber","id","totalAmount","className","filtredList","filter","_c","$RefreshReg$"],"sources":["C:/web/onix-ios-task/src/components/List/WorkersList.js"],"sourcesContent":["import { Worker } from \"../Worker/Worker\";\r\nimport { ListHeader } from \"../ListHeader/ListHeader\";\r\nimport styles from \"./WorkersList.module.css\";\r\n\r\nconst WorkersList = (props) => {\r\n  let listContent;\r\n\r\n  let estimates;\r\n\r\n  let totalSalaries = props.list.reduce((total, worker) => {\r\n    return Math.round((total + parseInt(worker.salary)) / props.list.length);\r\n  }, 0);\r\n\r\n  if (props.tabIndexClicked === \"All\") {\r\n    listContent = (\r\n      <>\r\n        {props.list.map((worker) => (\r\n          <li key={worker.id}>\r\n            <Worker\r\n              name={worker.name}\r\n              surname={worker.surname}\r\n              gender={worker.gender}\r\n              birthday={worker.birthDay}\r\n              salary={worker.salary}\r\n              department={worker.department}\r\n            />\r\n          </li>\r\n        ))}\r\n        <>{totalAmount && totalSalaries > 0 ? estimates : <p>No info!</p>}</>\r\n      </>\r\n    );\r\n    estimates = (\r\n      <div className={styles.estimates}>\r\n        <div>{`Average salary: ${totalSalaries}$`}</div>\r\n        <div>{`Quantity: ${totalAmount}`}</div>\r\n      </div>\r\n    );\r\n  } else {\r\n    let filtredList = (\r\n      <>\r\n        {\r\n          (filtredList = props.list.filter(\r\n            (worker) => worker.department === props.tabIndexClicked\r\n          ))\r\n        }\r\n      </>\r\n    );\r\n    \r\n  }\r\n\r\n  return (\r\n    <div className={styles[\"list__wrap\"]}>\r\n      <div className={styles[\"content-wrap\"]}>\r\n        <ListHeader />\r\n        {listContent.props.children.length === 0 ? (\r\n          <p>No workers FUCK!</p>\r\n        ) : (\r\n          listContent\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WorkersList;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}